<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.entity.IDao.IUserDao" >
  <resultMap id="BaseResultMap" type="com.entity.domain.User" >
    <id column="UserId" property="userid" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="UserName" property="username" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="PhoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="Identity" property="identity" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    UserId, Name, UserName, Password, PhoneNumber, Identity
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where UserId = #{userid,jdbcType=INTEGER}
  </select>
  <select id="getUserList" parameterType="com.entity.domain.User" resultMap="BaseResultMap">
    select 
         *  
    from user
    where 
    	 identity !="admin"
  </select>
  <select id="getUserByNameAndPw" parameterType="com.entity.domain.User" resultMap="BaseResultMap">
  	select 
  		*
  	from 
  		user
  	where
  		1=1 
  	<if test="username != null and username!=''" >
        and UserName=#{username}
    </if>
  	<if test="password != null and password!=''" >
        and Password=#{password}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where UserId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entity.domain.User" >
    insert into user (UserId, Name, UserName, 
      Password, PhoneNumber, Identity
      )
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.entity.domain.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        UserId,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="username != null" >
        UserName,
      </if>
      <if test="password != null" >
        Password,
      </if>
      <if test="phonenumber != null" >
        PhoneNumber,
      </if>
      <if test="identity != null" >
        Identity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.domain.User" >
    update user
    <set >
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        UserName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        Password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        PhoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        Identity = #{identity,jdbcType=VARCHAR},
      </if>
    </set>
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.domain.User" >
    update user
    set Name = #{name,jdbcType=VARCHAR},
      UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      PhoneNumber = #{phonenumber,jdbcType=VARCHAR},
      Identity = #{identity,jdbcType=VARCHAR}
    where UserId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>